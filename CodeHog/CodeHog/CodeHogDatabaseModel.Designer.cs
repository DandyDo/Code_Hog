//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CodeHogModel", "FK_Dependencies_ToTicketsForDependenciesOnTicket", "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CodeHog.Ticket), "Dependencies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeHog.Dependency), true)]
[assembly: EdmRelationshipAttribute("CodeHogModel", "FK_Dependencies_ToTicketsForTicket", "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CodeHog.Ticket), "Dependencies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeHog.Dependency), true)]
[assembly: EdmRelationshipAttribute("CodeHogModel", "FK_Notes_ToTickets", "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CodeHog.Ticket), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeHog.Note), true)]
[assembly: EdmRelationshipAttribute("CodeHogModel", "FK_Notes_ToUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CodeHog.User), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeHog.Note), true)]
[assembly: EdmRelationshipAttribute("CodeHogModel", "FK_Tickets_ToUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CodeHog.User), "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeHog.Ticket), true)]
[assembly: EdmRelationshipAttribute("CodeHogModel", "FK_Users_ToUserRoles", "User_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CodeHog.User_Roles), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeHog.User), true)]

#endregion

namespace CodeHog
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CodeHogEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CodeHogEntities object using the connection string found in the 'CodeHogEntities' section of the application configuration file.
        /// </summary>
        public CodeHogEntities() : base("name=CodeHogEntities", "CodeHogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CodeHogEntities object.
        /// </summary>
        public CodeHogEntities(string connectionString) : base(connectionString, "CodeHogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CodeHogEntities object.
        /// </summary>
        public CodeHogEntities(EntityConnection connection) : base(connection, "CodeHogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dependency> Dependencies
        {
            get
            {
                if ((_Dependencies == null))
                {
                    _Dependencies = base.CreateObjectSet<Dependency>("Dependencies");
                }
                return _Dependencies;
            }
        }
        private ObjectSet<Dependency> _Dependencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ticket> Tickets
        {
            get
            {
                if ((_Tickets == null))
                {
                    _Tickets = base.CreateObjectSet<Ticket>("Tickets");
                }
                return _Tickets;
            }
        }
        private ObjectSet<Ticket> _Tickets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User_Roles> User_Roles
        {
            get
            {
                if ((_User_Roles == null))
                {
                    _User_Roles = base.CreateObjectSet<User_Roles>("User_Roles");
                }
                return _User_Roles;
            }
        }
        private ObjectSet<User_Roles> _User_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dependencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDependencies(Dependency dependency)
        {
            base.AddObject("Dependencies", dependency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tickets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTickets(Ticket ticket)
        {
            base.AddObject("Tickets", ticket);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser_Roles(User_Roles user_Roles)
        {
            base.AddObject("User_Roles", user_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CodeHogModel", Name="Dependency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dependency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dependency object.
        /// </summary>
        /// <param name="dependencyID">Initial value of the DependencyID property.</param>
        /// <param name="ticketID">Initial value of the TicketID property.</param>
        /// <param name="dependentTicketID">Initial value of the DependentTicketID property.</param>
        public static Dependency CreateDependency(global::System.Int32 dependencyID, global::System.Int32 ticketID, global::System.Int32 dependentTicketID)
        {
            Dependency dependency = new Dependency();
            dependency.DependencyID = dependencyID;
            dependency.TicketID = ticketID;
            dependency.DependentTicketID = dependentTicketID;
            return dependency;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DependencyID
        {
            get
            {
                return _DependencyID;
            }
            set
            {
                if (_DependencyID != value)
                {
                    OnDependencyIDChanging(value);
                    ReportPropertyChanging("DependencyID");
                    _DependencyID = StructuralObject.SetValidValue(value, "DependencyID");
                    ReportPropertyChanged("DependencyID");
                    OnDependencyIDChanged();
                }
            }
        }
        private global::System.Int32 _DependencyID;
        partial void OnDependencyIDChanging(global::System.Int32 value);
        partial void OnDependencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketID
        {
            get
            {
                return _TicketID;
            }
            set
            {
                OnTicketIDChanging(value);
                ReportPropertyChanging("TicketID");
                _TicketID = StructuralObject.SetValidValue(value, "TicketID");
                ReportPropertyChanged("TicketID");
                OnTicketIDChanged();
            }
        }
        private global::System.Int32 _TicketID;
        partial void OnTicketIDChanging(global::System.Int32 value);
        partial void OnTicketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DependentTicketID
        {
            get
            {
                return _DependentTicketID;
            }
            set
            {
                OnDependentTicketIDChanging(value);
                ReportPropertyChanging("DependentTicketID");
                _DependentTicketID = StructuralObject.SetValidValue(value, "DependentTicketID");
                ReportPropertyChanged("DependentTicketID");
                OnDependentTicketIDChanged();
            }
        }
        private global::System.Int32 _DependentTicketID;
        partial void OnDependentTicketIDChanging(global::System.Int32 value);
        partial void OnDependentTicketIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Dependencies_ToTicketsForDependenciesOnTicket", "Tickets")]
        public Ticket Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("CodeHogModel.FK_Dependencies_ToTicketsForDependenciesOnTicket", "Tickets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("CodeHogModel.FK_Dependencies_ToTicketsForDependenciesOnTicket", "Tickets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ticket> TicketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("CodeHogModel.FK_Dependencies_ToTicketsForDependenciesOnTicket", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ticket>("CodeHogModel.FK_Dependencies_ToTicketsForDependenciesOnTicket", "Tickets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Dependencies_ToTicketsForTicket", "Tickets")]
        public Ticket Ticket1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("CodeHogModel.FK_Dependencies_ToTicketsForTicket", "Tickets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("CodeHogModel.FK_Dependencies_ToTicketsForTicket", "Tickets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ticket> Ticket1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("CodeHogModel.FK_Dependencies_ToTicketsForTicket", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ticket>("CodeHogModel.FK_Dependencies_ToTicketsForTicket", "Tickets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CodeHogModel", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Note object.
        /// </summary>
        /// <param name="noteID">Initial value of the NoteID property.</param>
        /// <param name="ticketID">Initial value of the TicketID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="note1">Initial value of the Note1 property.</param>
        public static Note CreateNote(global::System.Int32 noteID, global::System.Int32 ticketID, global::System.Int32 userID, global::System.String note1)
        {
            Note note = new Note();
            note.NoteID = noteID;
            note.TicketID = ticketID;
            note.UserID = userID;
            note.Note1 = note1;
            return note;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoteID
        {
            get
            {
                return _NoteID;
            }
            set
            {
                if (_NoteID != value)
                {
                    OnNoteIDChanging(value);
                    ReportPropertyChanging("NoteID");
                    _NoteID = StructuralObject.SetValidValue(value, "NoteID");
                    ReportPropertyChanged("NoteID");
                    OnNoteIDChanged();
                }
            }
        }
        private global::System.Int32 _NoteID;
        partial void OnNoteIDChanging(global::System.Int32 value);
        partial void OnNoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketID
        {
            get
            {
                return _TicketID;
            }
            set
            {
                OnTicketIDChanging(value);
                ReportPropertyChanging("TicketID");
                _TicketID = StructuralObject.SetValidValue(value, "TicketID");
                ReportPropertyChanged("TicketID");
                OnTicketIDChanged();
            }
        }
        private global::System.Int32 _TicketID;
        partial void OnTicketIDChanging(global::System.Int32 value);
        partial void OnTicketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note1
        {
            get
            {
                return _Note1;
            }
            set
            {
                OnNote1Changing(value);
                ReportPropertyChanging("Note1");
                _Note1 = StructuralObject.SetValidValue(value, false, "Note1");
                ReportPropertyChanged("Note1");
                OnNote1Changed();
            }
        }
        private global::System.String _Note1;
        partial void OnNote1Changing(global::System.String value);
        partial void OnNote1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Notes_ToTickets", "Tickets")]
        public Ticket Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("CodeHogModel.FK_Notes_ToTickets", "Tickets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("CodeHogModel.FK_Notes_ToTickets", "Tickets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ticket> TicketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("CodeHogModel.FK_Notes_ToTickets", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ticket>("CodeHogModel.FK_Notes_ToTickets", "Tickets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Notes_ToUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeHogModel.FK_Notes_ToUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeHogModel.FK_Notes_ToUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeHogModel.FK_Notes_ToUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CodeHogModel.FK_Notes_ToUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CodeHogModel", Name="Ticket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ticket : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ticket object.
        /// </summary>
        /// <param name="ticketID">Initial value of the TicketID property.</param>
        /// <param name="ticketName">Initial value of the TicketName property.</param>
        /// <param name="ticketStatus">Initial value of the TicketStatus property.</param>
        /// <param name="ticketPriority">Initial value of the TicketPriority property.</param>
        /// <param name="ticketArchiveStatus">Initial value of the TicketArchiveStatus property.</param>
        /// <param name="ticketDescription">Initial value of the TicketDescription property.</param>
        /// <param name="ticketReporter">Initial value of the TicketReporter property.</param>
        public static Ticket CreateTicket(global::System.Int32 ticketID, global::System.String ticketName, global::System.Int32 ticketStatus, global::System.Int32 ticketPriority, global::System.Boolean ticketArchiveStatus, global::System.String ticketDescription, global::System.Int32 ticketReporter)
        {
            Ticket ticket = new Ticket();
            ticket.TicketID = ticketID;
            ticket.TicketName = ticketName;
            ticket.TicketStatus = ticketStatus;
            ticket.TicketPriority = ticketPriority;
            ticket.TicketArchiveStatus = ticketArchiveStatus;
            ticket.TicketDescription = ticketDescription;
            ticket.TicketReporter = ticketReporter;
            return ticket;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketID
        {
            get
            {
                return _TicketID;
            }
            set
            {
                if (_TicketID != value)
                {
                    OnTicketIDChanging(value);
                    ReportPropertyChanging("TicketID");
                    _TicketID = StructuralObject.SetValidValue(value, "TicketID");
                    ReportPropertyChanged("TicketID");
                    OnTicketIDChanged();
                }
            }
        }
        private global::System.Int32 _TicketID;
        partial void OnTicketIDChanging(global::System.Int32 value);
        partial void OnTicketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TicketName
        {
            get
            {
                return _TicketName;
            }
            set
            {
                OnTicketNameChanging(value);
                ReportPropertyChanging("TicketName");
                _TicketName = StructuralObject.SetValidValue(value, false, "TicketName");
                ReportPropertyChanged("TicketName");
                OnTicketNameChanged();
            }
        }
        private global::System.String _TicketName;
        partial void OnTicketNameChanging(global::System.String value);
        partial void OnTicketNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketStatus
        {
            get
            {
                return _TicketStatus;
            }
            set
            {
                OnTicketStatusChanging(value);
                ReportPropertyChanging("TicketStatus");
                _TicketStatus = StructuralObject.SetValidValue(value, "TicketStatus");
                ReportPropertyChanged("TicketStatus");
                OnTicketStatusChanged();
            }
        }
        private global::System.Int32 _TicketStatus;
        partial void OnTicketStatusChanging(global::System.Int32 value);
        partial void OnTicketStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketPriority
        {
            get
            {
                return _TicketPriority;
            }
            set
            {
                OnTicketPriorityChanging(value);
                ReportPropertyChanging("TicketPriority");
                _TicketPriority = StructuralObject.SetValidValue(value, "TicketPriority");
                ReportPropertyChanged("TicketPriority");
                OnTicketPriorityChanged();
            }
        }
        private global::System.Int32 _TicketPriority;
        partial void OnTicketPriorityChanging(global::System.Int32 value);
        partial void OnTicketPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TicketArchiveStatus
        {
            get
            {
                return _TicketArchiveStatus;
            }
            set
            {
                OnTicketArchiveStatusChanging(value);
                ReportPropertyChanging("TicketArchiveStatus");
                _TicketArchiveStatus = StructuralObject.SetValidValue(value, "TicketArchiveStatus");
                ReportPropertyChanged("TicketArchiveStatus");
                OnTicketArchiveStatusChanged();
            }
        }
        private global::System.Boolean _TicketArchiveStatus;
        partial void OnTicketArchiveStatusChanging(global::System.Boolean value);
        partial void OnTicketArchiveStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TicketDescription
        {
            get
            {
                return _TicketDescription;
            }
            set
            {
                OnTicketDescriptionChanging(value);
                ReportPropertyChanging("TicketDescription");
                _TicketDescription = StructuralObject.SetValidValue(value, false, "TicketDescription");
                ReportPropertyChanged("TicketDescription");
                OnTicketDescriptionChanged();
            }
        }
        private global::System.String _TicketDescription;
        partial void OnTicketDescriptionChanging(global::System.String value);
        partial void OnTicketDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketReporter
        {
            get
            {
                return _TicketReporter;
            }
            set
            {
                OnTicketReporterChanging(value);
                ReportPropertyChanging("TicketReporter");
                _TicketReporter = StructuralObject.SetValidValue(value, "TicketReporter");
                ReportPropertyChanged("TicketReporter");
                OnTicketReporterChanged();
            }
        }
        private global::System.Int32 _TicketReporter;
        partial void OnTicketReporterChanging(global::System.Int32 value);
        partial void OnTicketReporterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Dependencies_ToTicketsForDependenciesOnTicket", "Dependencies")]
        public EntityCollection<Dependency> Dependencies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dependency>("CodeHogModel.FK_Dependencies_ToTicketsForDependenciesOnTicket", "Dependencies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dependency>("CodeHogModel.FK_Dependencies_ToTicketsForDependenciesOnTicket", "Dependencies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Dependencies_ToTicketsForTicket", "Dependencies")]
        public EntityCollection<Dependency> Dependencies1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dependency>("CodeHogModel.FK_Dependencies_ToTicketsForTicket", "Dependencies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dependency>("CodeHogModel.FK_Dependencies_ToTicketsForTicket", "Dependencies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Notes_ToTickets", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("CodeHogModel.FK_Notes_ToTickets", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("CodeHogModel.FK_Notes_ToTickets", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Tickets_ToUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeHogModel.FK_Tickets_ToUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeHogModel.FK_Tickets_ToUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeHogModel.FK_Tickets_ToUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CodeHogModel.FK_Tickets_ToUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CodeHogModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String username, global::System.String password, global::System.Int32 roleID)
        {
            User user = new User();
            user.UserID = userID;
            user.Username = username;
            user.Password = password;
            user.RoleID = roleID;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, "UserID");
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value, "RoleID");
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Notes_ToUsers", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("CodeHogModel.FK_Notes_ToUsers", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("CodeHogModel.FK_Notes_ToUsers", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Tickets_ToUsers", "Tickets")]
        public EntityCollection<Ticket> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("CodeHogModel.FK_Tickets_ToUsers", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("CodeHogModel.FK_Tickets_ToUsers", "Tickets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Users_ToUserRoles", "User_Roles")]
        public User_Roles User_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User_Roles>("CodeHogModel.FK_Users_ToUserRoles", "User_Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User_Roles>("CodeHogModel.FK_Users_ToUserRoles", "User_Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User_Roles> User_RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User_Roles>("CodeHogModel.FK_Users_ToUserRoles", "User_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User_Roles>("CodeHogModel.FK_Users_ToUserRoles", "User_Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CodeHogModel", Name="User_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User_Roles object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static User_Roles CreateUser_Roles(global::System.Int32 roleID, global::System.String roleName)
        {
            User_Roles user_Roles = new User_Roles();
            user_Roles.RoleID = roleID;
            user_Roles.RoleName = roleName;
            return user_Roles;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, "RoleID");
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false, "RoleName");
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CodeHogModel", "FK_Users_ToUserRoles", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("CodeHogModel.FK_Users_ToUserRoles", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("CodeHogModel.FK_Users_ToUserRoles", "Users", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
